on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true

  # MYSQL DB
  DB_MYSQL_HOST: localhost  
  DB_MYSQL_USER: root
  DB_MYSQL_PASSWORD: "root"
  DB_MYSQL_DATABASE: test_sqlkata  

  # MS SQL
  DB_MSSQL_HOST: localhost  
  DB_MSSQL_USER: sa
  DB_MSSQL_PASSWORD: secret
  DB_MSSQL_DATABASE: test_sqlkata
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Start MySql
        run: |
          sudo /etc/init.d/mysql start
          mysqladmin -u ${{ env.DB_MYSQL_USER }} -p${{ env.DB_MYSQL_PASSWORD }} password ''
          mysql -e 'CREATE DATABASE ${{ env.DB_MYSQL_DATABASE }};' -u${{ env.DB_MYSQL_USER }}
          mysql -e 'CREATE TABLE cars(id int primary key auto_increment);' -u${{ env.DB_MYSQL_USER }} ${{ env.DB_MYSQL_DATABASE }}
          mysql -e 'SHOW TABLES;' -u${{ env.DB_MYSQL_USER }} ${{ env.DB_MYSQL_DATABASE }}
      
      - name: Install SQL Server
        run: |
          sudo su
          curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
          add-apt-repository "$(curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/mssql-server-2022.list)"
          apt-get update
          ACCEPT_EULA=Y apt-get install -y mssql-server mssql-tools unixodbc-dev
          /opt/mssql/bin/mssql-conf setup accept-eula --edition Developer --sapassword "${{ env.DB_MSSQL_PASSWORD }}"

      - name: Run SQL commands (example)
        run: |
          sqlcmd -S localhost -U SA -P "${{ env.DB_MSSQL_PASSWORD }}" -Q "SELECT @@VERSION"
      
      - name: Run Test
        run: dotnet test --no-build --verbosity normal
        env:
          SQLKATA_MYSQL_HOST: ${{ env.DB_MYSQL_HOST }}
          SQLKATA_MYSQL_USER: ${{ env.DB_MYSQL_USER }}
          SQLKATA_MYSQL_DB: ${{ env.DB_MYSQL_DATABASE }}
